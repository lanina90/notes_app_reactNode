{"ast":null,"code":"export const createDate = () => {\n  let date = new Date();\n  let options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('en-US', options);\n};\nexport const trimText = (text, maxLength) => {\n  if (text.length > maxLength) {\n    return text.substring(0, maxLength) + '...';\n  } else {\n    return text;\n  }\n};\nexport const getDatesFromString = str => {\n  const matches = str.match(/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/g);\n  return matches ? matches.join(', ') : '';\n};\nexport const getCategoryImage = category => {\n  let categoryImage;\n  switch (category) {\n    case \"Task\":\n      categoryImage = \"./images/task_icon.svg\";\n      break;\n    case \"Random Thought\":\n      categoryImage = \"./images/thought_icon.svg\";\n      break;\n    case \"Idea\":\n      categoryImage = \"./images/idea_icon.svg\";\n      break;\n    case \"Quote\":\n      categoryImage = \"./images/quotes_icon.svg\";\n      break;\n    default:\n      categoryImage = \"\";\n  }\n  return categoryImage;\n};","map":{"version":3,"names":["createDate","date","Date","options","year","month","day","toLocaleDateString","trimText","text","maxLength","length","substring","getDatesFromString","str","matches","match","join","getCategoryImage","category","categoryImage"],"sources":["C:/Users/Admin/WebstormProjects/Front/radency_company/notes_app_reactNodeJS/client/src/utils/helperFunctions.tsx"],"sourcesContent":["export const createDate = () : string => {\r\n  let date = new Date()\r\n  let options: Intl.DateTimeFormatOptions = {year: 'numeric', month: 'long', day: 'numeric'}\r\n  return date.toLocaleDateString('en-US', options)\r\n}\r\n\r\nexport const trimText = (text: string, maxLength: number) => {\r\n  if (text.length > maxLength) {\r\n    return text.substring(0, maxLength) + '...'\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n\r\nexport const getDatesFromString = (str: string) => {\r\n  const matches = str.match(/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/g)\r\n  return matches ? matches.join(', ') : ''\r\n}\r\n\r\nexport const getCategoryImage = (category: string) => {\r\n  let categoryImage\r\n  switch (category) {\r\n    case \"Task\":\r\n      categoryImage = \"./images/task_icon.svg\"\r\n      break\r\n    case \"Random Thought\":\r\n      categoryImage = \"./images/thought_icon.svg\"\r\n      break\r\n    case \"Idea\":\r\n      categoryImage = \"./images/idea_icon.svg\"\r\n      break\r\n    case \"Quote\":\r\n      categoryImage = \"./images/quotes_icon.svg\"\r\n      break\r\n    default:\r\n      categoryImage = \"\"\r\n  }\r\n  return categoryImage\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAe;EACvC,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACrB,IAAIC,OAAmC,GAAG;IAACC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAS,CAAC;EAC1F,OAAOL,IAAI,CAACM,kBAAkB,CAAC,OAAO,EAAEJ,OAAO,CAAC;AAClD,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGA,CAACC,IAAY,EAAEC,SAAiB,KAAK;EAC3D,IAAID,IAAI,CAACE,MAAM,GAAGD,SAAS,EAAE;IAC3B,OAAOD,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK;EAC7C,CAAC,MAAM;IACL,OAAOD,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAIC,GAAW,IAAK;EACjD,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAK,CAAC,0BAA0B,CAAC;EACrD,OAAOD,OAAO,GAAGA,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AAC1C,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAgB,IAAK;EACpD,IAAIC,aAAa;EACjB,QAAQD,QAAQ;IACd,KAAK,MAAM;MACTC,aAAa,GAAG,wBAAwB;MACxC;IACF,KAAK,gBAAgB;MACnBA,aAAa,GAAG,2BAA2B;MAC3C;IACF,KAAK,MAAM;MACTA,aAAa,GAAG,wBAAwB;MACxC;IACF,KAAK,OAAO;MACVA,aAAa,GAAG,0BAA0B;MAC1C;IACF;MACEA,aAAa,GAAG,EAAE;EACtB;EACA,OAAOA,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}