{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\WebstormProjects\\\\Front\\\\radency_company\\\\notes_app_reactNodeJS\\\\client\\\\src\\\\Components\\\\TableComponents\\\\TableComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCategoryImage } from \"../../utils/helperFunctions\";\nimport EditNoteComponent from \"../Forms/EditNoteComponent\";\nimport TableRowArchivedAndUnarchived from \"./TableRowArchivedAndUnarchived\";\nimport { useAppSelector } from \"../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = ({\n  headers,\n  tableShowFor\n}) => {\n  _s();\n  const notes = useAppSelector(state => state.notes.notes);\n  // const archivedNotes = useAppSelector(state => state.notes.notes.filter(note => note.archived))\n  const notArchivedNotes = useAppSelector(state => state.notes.notes.filter(note => !note.archived));\n  const [editedNoteId, setEditedNoteId] = useState(null);\n  const [summaryData, setSummaryData] = useState({});\n  const noteToEdit = notArchivedNotes.find(note => note.id === editedNoteId);\n  const archivedNotes = notes.filter(note => note.archived === true);\n  useEffect(() => {\n    renderSummaryTable();\n  }, [notes]);\n  const renderSummaryTable = () => {\n    const categoriesCount = notes.reduce((acc, note) => {\n      const status = note.archived ? 'archived' : 'active';\n      const category = note.category;\n      acc[category] = acc[category] || {\n        active: 0,\n        archived: 0\n      };\n      acc[category][status]++;\n      return acc;\n    }, {});\n    setSummaryData(categoriesCount);\n  };\n  const notesToShow = tableShowFor === 'unarchived' ? notArchivedNotes : archivedNotes;\n  console.log('archivedNotes', archivedNotes);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [tableShowFor === 'unarchived' || tableShowFor === 'archived' ? notesToShow.map(note => /*#__PURE__*/_jsxDEV(TableRowArchivedAndUnarchived, {\n          note: note,\n          tableShowFor: tableShowFor,\n          setEditedNoteId: setEditedNoteId\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)) : null, tableShowFor === 'summary' && Object.keys(summaryData).map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getCategoryImage(category),\n                  alt: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: summaryData[category].active\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: summaryData[category].archived\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), noteToEdit && /*#__PURE__*/_jsxDEV(EditNoteComponent, {\n      note: noteToEdit,\n      setEditedNoteId: () => setEditedNoteId(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"ROEA2Nok1s5nGmVdFfhAgEhsYCE=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useEffect","useState","getCategoryImage","EditNoteComponent","TableRowArchivedAndUnarchived","useAppSelector","jsxDEV","_jsxDEV","TableComponent","headers","tableShowFor","_s","notes","state","notArchivedNotes","filter","note","archived","editedNoteId","setEditedNoteId","summaryData","setSummaryData","noteToEdit","find","id","archivedNotes","renderSummaryTable","categoriesCount","reduce","acc","status","category","active","notesToShow","console","log","children","className","map","header","index","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Admin/WebstormProjects/Front/radency_company/notes_app_reactNodeJS/client/src/Components/TableComponents/TableComponent.tsx"],"sourcesContent":["import React, {FC, ReactNode, useEffect, useState} from 'react'\r\nimport {getCategoryImage} from \"../../utils/helperFunctions\"\r\nimport {NoteType} from \"../../store/notesSlice\"\r\nimport EditNoteComponent from \"../Forms/EditNoteComponent\"\r\nimport TableRowArchivedAndUnarchived from \"./TableRowArchivedAndUnarchived\"\r\nimport {useAppSelector} from \"../../hooks\"\r\nimport {log} from \"util\";\r\n\r\ntype SummaryDataTypes = {\r\n  [category: string]: {\r\n    active: number\r\n    archived: number\r\n  }\r\n}\r\n\r\ntype TableComponentPropsType = {\r\n  headers: ReactNode[]\r\n  tableShowFor: string\r\n}\r\n\r\nconst TableComponent: FC<TableComponentPropsType> = ({headers, tableShowFor}) => {\r\n\r\n  const notes = useAppSelector(state => state.notes.notes)\r\n  // const archivedNotes = useAppSelector(state => state.notes.notes.filter(note => note.archived))\r\n  const notArchivedNotes = useAppSelector(state => state.notes.notes.filter(note => !note.archived))\r\n  const [editedNoteId, setEditedNoteId] = useState<number | null>(null)\r\n  const [summaryData, setSummaryData] = useState<SummaryDataTypes>({})\r\n  const noteToEdit = notArchivedNotes.find((note: NoteType) => note.id === editedNoteId)\r\n const archivedNotes = notes.filter(note => note.archived === true)\r\n  useEffect(() => {\r\n    renderSummaryTable()\r\n  }, [notes])\r\n\r\n  const renderSummaryTable = () => {\r\n    const categoriesCount = notes.reduce((acc: any, note) => {\r\n      const status = note.archived ? 'archived' : 'active'\r\n      const category = note.category\r\n\r\n      acc[category] = acc[category] || {active: 0, archived: 0}\r\n      acc[category][status]++\r\n      return acc\r\n    }, {})\r\n\r\n    setSummaryData(categoriesCount)\r\n  }\r\n\r\n  const notesToShow = tableShowFor === 'unarchived' ? notArchivedNotes : archivedNotes\r\n\r\n  console.log('archivedNotes', archivedNotes);\r\n\r\n  return (\r\n    <section>\r\n      <table className=\"notes\">\r\n        <thead>\r\n        <tr>\r\n          {headers.map((header, index) => (\r\n            <th key={index}>{header}</th>\r\n          ))}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {tableShowFor === 'unarchived' || tableShowFor === 'archived' ?\r\n          notesToShow.map((note: any) => (\r\n            <TableRowArchivedAndUnarchived\r\n              key={note.id}\r\n              note={note}\r\n              tableShowFor={tableShowFor}\r\n              setEditedNoteId={setEditedNoteId}/>\r\n          )) : null}\r\n\r\n        {tableShowFor === 'summary' &&\r\n          (\r\n            Object.keys(summaryData).map((category) => (\r\n              <tr key={category}>\r\n                <td>\r\n                  <div className=\"flex-container\">\r\n                    <div className=\"category-image\">\r\n                      <img src={getCategoryImage(category)} alt={category}/>\r\n                    </div>\r\n                    <div>{category}</div>\r\n                  </div>\r\n                </td>\r\n                <td>{summaryData[category].active}</td>\r\n                <td>{summaryData[category].archived}</td>\r\n              </tr>\r\n            ))\r\n          )\r\n        }\r\n        </tbody>\r\n      </table>\r\n      {noteToEdit && (\r\n        <EditNoteComponent\r\n          note={noteToEdit}\r\n          setEditedNoteId={() => setEditedNoteId(null)}\r\n        />\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TableComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}