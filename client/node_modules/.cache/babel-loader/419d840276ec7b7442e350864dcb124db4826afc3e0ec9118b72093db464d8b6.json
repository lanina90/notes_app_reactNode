{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAllNotes, createNote } from \"../services/api\";\nconst initialState = {\n  notes: []\n};\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async () => {\n  return await fetchAllNotes();\n});\nexport const createNewNote = createAsyncThunk(\"notes/createNewNote\", async noteData => {\n  const response = await createNote(noteData);\n  const data = await response.json();\n  return data;\n});\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    editNote: (state, action) => {\n      const {\n        id,\n        title,\n        category,\n        content,\n        dates\n      } = action.payload;\n      const noteToEdit = state.notes.find(note => note.id === id);\n      if (noteToEdit) {\n        noteToEdit.title = title;\n        noteToEdit.category = category;\n        noteToEdit.content = content;\n        noteToEdit.dates = dates;\n      }\n    },\n    toggleArchive: (state, action) => {\n      const id = action.payload;\n      const toggledNote = state.notes.find(note => note.id === id);\n      if (toggledNote) {\n        toggledNote.archived = !toggledNote.archived;\n      }\n    },\n    removeNote: (state, action) => {\n      state.notes = state.notes.filter(note => note.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createNewNote.fulfilled, (state, action) => {\n      state.notes.push(action.payload);\n    });\n    builder.addCase(fetchNotes.fulfilled, (state, action) => {\n      state.notes = action.payload.flat();\n    });\n  }\n});\nexport const {\n  removeNote,\n  editNote,\n  toggleArchive\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllNotes","createNote","initialState","notes","fetchNotes","createNewNote","noteData","response","data","json","notesSlice","name","reducers","editNote","state","action","id","title","category","content","dates","payload","noteToEdit","find","note","toggleArchive","toggledNote","archived","removeNote","filter","extraReducers","builder","addCase","fulfilled","push","flat","actions","reducer"],"sources":["C:/Users/Admin/WebstormProjects/Front/radency_company/notes_app_reactNodeJS/client/src/store/notesSlice.tsx"],"sourcesContent":["import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\nimport {fetchAllNotes, createNote} from \"../services/api\";\r\n\r\nexport type NoteType = {\r\n  id: any\r\n  title: string\r\n  category: string\r\n  content: string\r\n  created: string\r\n  dates: string\r\n  archived: boolean\r\n}\r\n\r\nexport type NoteEditType = {\r\n  id: any\r\n  title: string\r\n  category: string\r\n  content: string\r\n  dates: string\r\n}\r\n\r\ntype NotesStateType = {\r\n  notes: NoteType[]\r\n}\r\n\r\nconst initialState: NotesStateType = {\r\n  notes: []\r\n}\r\n\r\nexport const fetchNotes = createAsyncThunk(\r\n  \"notes/fetchNotes\",\r\n  async () => {\r\n    return await fetchAllNotes()\r\n  }\r\n);\r\n\r\n\r\nexport const createNewNote = createAsyncThunk(\r\n  \"notes/createNewNote\",\r\n  async (noteData: NoteType) => {\r\n    const response = await createNote(noteData);\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    editNote: (state, action: PayloadAction<NoteEditType>) => {\r\n      const {id, title, category, content, dates} = action.payload\r\n      const noteToEdit = state.notes.find((note) => note.id === id)\r\n      if (noteToEdit) {\r\n        noteToEdit.title = title\r\n        noteToEdit.category = category\r\n        noteToEdit.content = content\r\n        noteToEdit.dates = dates\r\n      }\r\n    },\r\n    toggleArchive: (state, action: PayloadAction<number>) => {\r\n      const id = action.payload\r\n      const toggledNote = state.notes.find(note => note.id === id)\r\n      if (toggledNote) {\r\n        toggledNote.archived = !toggledNote.archived\r\n      }\r\n    },\r\n    removeNote: (state, action: PayloadAction<number>) => {\r\n      state.notes = state.notes.filter((note) => note.id !== action.payload)\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(createNewNote.fulfilled, (state, action) => {\r\n        state.notes.push(action.payload);\r\n    })\r\n      builder.addCase(fetchNotes.fulfilled, (state, action) => {\r\n        state.notes = action.payload.flat();\r\n    })\r\n\r\n  },\r\n})\r\n\r\nexport const {\r\n  removeNote,\r\n  editNote,\r\n  toggleArchive\r\n} = notesSlice.actions\r\n\r\n\r\nexport default notesSlice.reducer"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAsB,kBAAkB;AAC7E,SAAQC,aAAa,EAAEC,UAAU,QAAO,iBAAiB;AAwBzD,MAAMC,YAA4B,GAAG;EACnCC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,kBAAkB,EAClB,YAAY;EACV,OAAO,MAAME,aAAa,CAAC,CAAC;AAC9B,CACF,CAAC;AAGD,OAAO,MAAMK,aAAa,GAAGP,gBAAgB,CAC3C,qBAAqB,EACrB,MAAOQ,QAAkB,IAAK;EAC5B,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACK,QAAQ,CAAC;EAC3C,MAAME,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CACF,CAAC;AAED,MAAME,UAAU,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAmC,KAAK;MACxD,MAAM;QAACC,EAAE;QAAEC,KAAK;QAAEC,QAAQ;QAAEC,OAAO;QAAEC;MAAK,CAAC,GAAGL,MAAM,CAACM,OAAO;MAC5D,MAAMC,UAAU,GAAGR,KAAK,CAACX,KAAK,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAIM,UAAU,EAAE;QACdA,UAAU,CAACL,KAAK,GAAGA,KAAK;QACxBK,UAAU,CAACJ,QAAQ,GAAGA,QAAQ;QAC9BI,UAAU,CAACH,OAAO,GAAGA,OAAO;QAC5BG,UAAU,CAACF,KAAK,GAAGA,KAAK;MAC1B;IACF,CAAC;IACDK,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAA6B,KAAK;MACvD,MAAMC,EAAE,GAAGD,MAAM,CAACM,OAAO;MACzB,MAAMK,WAAW,GAAGZ,KAAK,CAACX,KAAK,CAACoB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;MAC5D,IAAIU,WAAW,EAAE;QACfA,WAAW,CAACC,QAAQ,GAAG,CAACD,WAAW,CAACC,QAAQ;MAC9C;IACF,CAAC;IACDC,UAAU,EAAEA,CAACd,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACX,KAAK,GAAGW,KAAK,CAACX,KAAK,CAAC0B,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKD,MAAM,CAACM,OAAO,CAAC;IACxE;EACF,CAAC;EACDS,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAC3B,aAAa,CAAC4B,SAAS,EAAE,CAACnB,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACX,KAAK,CAAC+B,IAAI,CAACnB,MAAM,CAACM,OAAO,CAAC;IACpC,CAAC,CAAC;IACAU,OAAO,CAACC,OAAO,CAAC5B,UAAU,CAAC6B,SAAS,EAAE,CAACnB,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACM,OAAO,CAACc,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;EAEJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXP,UAAU;EACVf,QAAQ;EACRY;AACF,CAAC,GAAGf,UAAU,CAAC0B,OAAO;AAGtB,eAAe1B,UAAU,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}