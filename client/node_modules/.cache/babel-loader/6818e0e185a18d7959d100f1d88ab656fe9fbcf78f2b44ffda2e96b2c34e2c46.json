{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAllNotes, createNote, deleteNote, editNote, toggleArchiveOnServer } from \"../services/api\";\nconst initialState = {\n  notes: []\n};\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async () => {\n  return await fetchAllNotes();\n});\nexport const createNewNote = createAsyncThunk(\"notes/createNewNote\", async noteData => {\n  try {\n    return await createNote(noteData);\n  } catch (e) {\n    console.log('createNewNote', e);\n  }\n});\nexport const deleteOneNote = createAsyncThunk(\"notes/deleteOneNote\", async id => {\n  try {\n    return await deleteNote(id);\n  } catch (e) {\n    console.log('createNewNote', e);\n  }\n});\nexport const editOneNote = createAsyncThunk(\"notes/editOneNote\", async noteData => {\n  try {\n    return await editNote(noteData.id, noteData);\n  } catch (e) {\n    console.log('createNewNote', e);\n  }\n});\nexport const toggleArchiveNote = createAsyncThunk('notes/toggleArchiveNote', async id => {\n  try {\n    const response = await toggleArchiveOnServer(id);\n    return response.data;\n  } catch (e) {\n    console.error('Error toggling archive:', e);\n    throw e;\n  }\n});\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    toggleArchive: (state, action) => {\n      const id = action.payload;\n      const toggledNote = state.notes.find(note => note.id === id);\n      if (toggledNote) {\n        toggledNote.archived = !toggledNote.archived;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createNewNote.fulfilled, (state, action) => {\n      state.notes.push(action.payload);\n    });\n    builder.addCase(fetchNotes.fulfilled, (state, action) => {\n      state.notes = action.payload.flat();\n    });\n    builder.addCase(deleteOneNote.fulfilled, (state, action) => {\n      state.notes = state.notes.filter(note => note.id !== action.payload);\n    });\n    builder.addCase(editOneNote.fulfilled, (state, action) => {\n      const {\n        id,\n        title,\n        category,\n        content,\n        dates\n      } = action.payload;\n      const noteToEdit = state.notes.find(note => note.id === id);\n      if (noteToEdit) {\n        noteToEdit.title = title;\n        noteToEdit.category = category;\n        noteToEdit.content = content;\n        noteToEdit.dates = dates;\n      }\n    });\n    builder.addCase(toggleArchiveNote.fulfilled, (state, action) => {\n      state.notes = state.notes.filter(note => note.id !== action.payload);\n    });\n  }\n});\nexport const {\n  toggleArchive\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllNotes","createNote","deleteNote","editNote","toggleArchiveOnServer","initialState","notes","fetchNotes","createNewNote","noteData","e","console","log","deleteOneNote","id","editOneNote","toggleArchiveNote","response","data","error","notesSlice","name","reducers","toggleArchive","state","action","payload","toggledNote","find","note","archived","extraReducers","builder","addCase","fulfilled","push","flat","filter","title","category","content","dates","noteToEdit","actions","reducer"],"sources":["C:/Users/Admin/WebstormProjects/Front/radency_company/notes_app_reactNodeJS/client/src/store/notesSlice.tsx"],"sourcesContent":["import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\nimport {fetchAllNotes, createNote, deleteNote, editNote, toggleArchiveOnServer} from \"../services/api\";\r\n\r\nexport type NoteType = {\r\n  id: any\r\n  title: string\r\n  category: string\r\n  content: string\r\n  created: string\r\n  dates: string\r\n  archived: boolean\r\n}\r\n\r\nexport type NoteEditType = {\r\n  id: any\r\n  title: string\r\n  category: string\r\n  content: string\r\n  dates: string\r\n}\r\n\r\ntype NotesStateType = {\r\n  notes: NoteType[]\r\n}\r\n\r\nconst initialState: NotesStateType = {\r\n  notes: []\r\n}\r\n\r\nexport const fetchNotes = createAsyncThunk(\r\n  \"notes/fetchNotes\",\r\n  async () => {\r\n    return await fetchAllNotes()\r\n  }\r\n);\r\n\r\nexport const createNewNote = createAsyncThunk(\r\n  \"notes/createNewNote\",\r\n  async (noteData: NoteType) => {\r\n    try{\r\n      return await createNote(noteData);\r\n    } catch (e) {\r\n      console.log('createNewNote', e)\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteOneNote = createAsyncThunk(\r\n  \"notes/deleteOneNote\",\r\n  async (id: number) => {\r\n    try{\r\n      return await deleteNote(id);\r\n    } catch (e) {\r\n      console.log('createNewNote', e)\r\n    }\r\n  }\r\n);\r\n\r\nexport const editOneNote = createAsyncThunk(\r\n  \"notes/editOneNote\",\r\n  async (noteData: NoteType) => {\r\n    try{\r\n      return await editNote(noteData.id, noteData)\r\n    } catch (e) {\r\n      console.log('createNewNote', e)\r\n    }\r\n  }\r\n);\r\n\r\nexport const toggleArchiveNote = createAsyncThunk(\r\n  'notes/toggleArchiveNote',\r\n  async (id: number) => {\r\n    try {\r\n      const response = await toggleArchiveOnServer(id);\r\n      return response.data;\r\n    } catch (e) {\r\n      console.error('Error toggling archive:', e);\r\n      throw e;\r\n    }\r\n  }\r\n);\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    toggleArchive: (state, action: PayloadAction<number>) => {\r\n      const id = action.payload\r\n      const toggledNote = state.notes.find(note => note.id === id)\r\n      if (toggledNote) {\r\n        toggledNote.archived = !toggledNote.archived\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(createNewNote.fulfilled, (state, action) => {\r\n      state.notes.push(action.payload);\r\n    })\r\n    builder.addCase(fetchNotes.fulfilled, (state, action) => {\r\n      state.notes = action.payload.flat();\r\n    })\r\n    builder.addCase(deleteOneNote.fulfilled, (state, action) => {\r\n      state.notes = state.notes.filter((note) => note.id !== action.payload)\r\n    })\r\n    builder.addCase(editOneNote.fulfilled, (state, action) => {\r\n      const {id, title, category, content, dates} = action.payload\r\n      const noteToEdit = state.notes.find((note) => note.id === id)\r\n      if (noteToEdit) {\r\n        noteToEdit.title = title\r\n        noteToEdit.category = category\r\n        noteToEdit.content = content\r\n        noteToEdit.dates = dates\r\n      }\r\n    })\r\n    builder.addCase(toggleArchiveNote.fulfilled, (state, action) => {\r\n      state.notes = state.notes.filter((note) => note.id !== action.payload)\r\n    })\r\n  },\r\n})\r\n\r\nexport const {\r\n  toggleArchive\r\n} = notesSlice.actions\r\n\r\n\r\nexport default notesSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}